version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: invoice-flow-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: invoice_flow
      POSTGRES_USER: invoice_user
      POSTGRES_PASSWORD: invoice_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - invoice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U invoice_user -d invoice_flow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: invoice-flow-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://invoice_user:invoice_password@postgres:5432/invoice_flow
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - invoice-network
    volumes:
      - ./uploads:/app/uploads

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: invoice-flow-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - invoice-network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  invoice-network:
    driver: bridge
